{
  "name": "resona-music-platform",
  "version": "1.0.0",
  "description": "🎵 Professional full-stack music streaming platform built with React 19, Node.js, and MongoDB Atlas. Features enterprise-grade security, responsive design, and real-time audio streaming.",
  "private": true,
  "author": {
    "name": "Pranav Priyadarshi",
    "email": "pranavpriyadarshi903@gmail.com",
    "url": "https://github.com/lazys0ul"
  },
  "license": "MIT",
  "homepage": "https://github.com/lazys0ul/Basic-project-3---Music-Player#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lazys0ul/Basic-project-3---Music-Player.git"
  },
  "bugs": {
    "url": "https://github.com/lazys0ul/Basic-project-3---Music-Player/issues"
  },
  "keywords": [
    "music-streaming",
    "react",
    "nodejs",
    "mongodb",
    "fullstack",
    "music-player",
    "audio-streaming",
    "glassmorphism",
    "responsive-design",
    "jwt-authentication",
    "express",
    "vite",
    "tailwindcss",
    "internship-project",
    "web-development",
    "modern-ui",
    "pwa-ready",
    "production-ready",
    "enterprise-grade",
    "unified-mentor"
  ],
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "🚀 Main Commands": "# ============================================",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "build": "npm run build:frontend && npm run build:backend",
    "test": "npm run test:backend && npm run test:frontend",
    
    "📦 Installation": "# ==========================================",
    "install:all": "npm install && npm install --prefix backend && npm install --prefix frontend",
    "install:backend": "npm install --prefix backend",
    "install:frontend": "npm install --prefix frontend",
    "postinstall": "npm run install:all",
    
    "⚡ Backend": "# =============================================",
    "start:backend": "npm start --prefix backend",
    "dev:backend": "npm run dev --prefix backend",
    "build:backend": "echo 'Backend build complete'",
    "test:backend": "npm test --prefix backend",
    
    "🎨 Frontend": "# ============================================",
    "start:frontend": "npm run preview --prefix frontend",
    "dev:frontend": "npm run dev --prefix frontend", 
    "build:frontend": "npm run build --prefix frontend",
    "test:frontend": "echo 'Frontend tests not yet implemented'",
    "preview:frontend": "npm run preview --prefix frontend",
    
    "🔧 Development Tools": "# ==================================",
    "lint": "npm run lint --prefix backend && npm run lint --prefix frontend",
    "lint:fix": "npm run lint:fix --prefix backend && npm run lint:fix --prefix frontend",
    "format": "npm run format --prefix backend && npm run format --prefix frontend",
    "type-check": "npm run type-check --prefix frontend",
    
    "🛡️ Security & Quality": "# ===============================",
    "audit": "npm audit --prefix backend && npm audit --prefix frontend",
    "audit:fix": "npm audit fix --prefix backend && npm audit fix --prefix frontend",
    "security:scan": "npm run audit && npm run lint",
    "deps:update": "npm update && npm update --prefix backend && npm update --prefix frontend",
    "deps:check": "npm outdated && npm outdated --prefix backend && npm outdated --prefix frontend",
    
    "🗄️ Database": "# ==========================================",
    "db:check": "node backend/scripts/check-database.js",
    "db:recover": "node backend/scripts/recover-music.js", 
    "db:reset": "node backend/scripts/complete-reset.js",
    "db:backup": "echo 'Database backup functionality not yet implemented'",
    
    "🐳 Docker": "# =============================================",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --rmi all",
    
    "🧹 Maintenance": "# =====================================",
    "clean": "rimraf node_modules backend/node_modules frontend/node_modules",
    "clean:build": "rimraf backend/dist frontend/dist",
    "clean:logs": "rimraf backend/logs/*.log",
    "clean:uploads": "rimraf backend/uploads/*",
    "clean:all": "npm run clean && npm run clean:build && npm run clean:logs",
    
    "📊 Analytics": "# ==========================================",
    "analyze": "npm run analyze --prefix frontend",
    "bundle:analyze": "npm run bundle:analyze --prefix frontend",
    "size:check": "npm run build:frontend && du -sh frontend/dist",
    
    "🚀 Deployment": "# ========================================",
    "deploy:render": "echo 'Deploying to Render.com via render.yaml'",
    "deploy:vercel": "npm run build:frontend && vercel --prod",
    "predeploy": "npm run build && npm run test && npm run lint",
    
    "ℹ️ Information": "# ======================================",
    "info": "node -e \"console.log('🎵 Resona Music Platform v' + require('./package.json').version)\"",
    "env:check": "node backend/utils/validateEnv.js",
    "health:check": "curl -f http://localhost:5000 || echo 'Backend not running'",
    "ports:check": "netstat -an | grep -E ':(3000|5000)'",
    
    "📚 Documentation": "# ==================================",
    "docs:serve": "echo 'Documentation server not yet implemented'",
    "readme:update": "echo 'README updated - please review changes'",
    "changelog:generate": "echo 'Changelog generation not yet implemented'"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "rimraf": "^5.0.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "engineStrict": true,
  "os": [
    "darwin",
    "linux", 
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "funding": {
    "type": "individual",
    "url": "https://github.com/sponsors/lazys0ul"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
